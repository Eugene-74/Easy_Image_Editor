name: Build C++ Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  deployments: write

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y g++ pkg-config libopencv-dev qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools libexiv2-dev

    - name: Build the main project
      run: |
        g++ main.cpp qrc_resources.cpp -fPIC -L./lib -lfolders -o main.exe \
        `pkg-config --cflags --libs Qt5Widgets Qt5Gui Qt5Core opencv4` -lexiv2

    - name: Archive Linux artifacts
      uses: actions/upload-artifact@v3
      with:
        name: linux-build
        path: ./main.exe

  release:
    runs-on: ubuntu-latest
    needs: build-linux  # This job will run after the build job

    steps:
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.0  # Specify a meaningful tag name
        name: Release v1.0.0  # Release name
        body: |
          Automated release for commit ${{ github.sha }}.
          Linux build: [Download](https://github.com/${{ github.repository }}/actions/artifacts/${{ github.run_id }})/linux-build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Linux executable
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.0  # Use the same tag as above
        files: ./main.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
