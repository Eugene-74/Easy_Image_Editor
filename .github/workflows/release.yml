name: Build C++ Project

env:
  VERSION: v1.0.1
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   5.15.2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  deployments: write

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y g++ pkg-config libopencv-dev qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools libexiv2-dev
    - name: Build the main project
      run: |
        g++ -g main.cpp ressources/qrc_resources.cpp \
        -fPIC -L./lib -lfolders -o main-linux `pkg-config --cflags --libs Qt5Widgets Qt5Gui Qt5Core  opencv4` -lexiv2
    - name: Find .so files and zip the compiled program
      run: |
        mkdir release-package
        cp main-linux release-package/
        find . -name "*.so" -exec cp {} release-package / \;
        zip -r release-package.zip release-package
    - name: Archive Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: ./release-package.zip

  release:
    runs-on: ubuntu-latest
    needs: [build-linux] #, build-windows

    steps:
    - name: Download Linux executable
      uses: actions/download-artifact@v4
      with:
        name: linux-build

    # - name: Download Windows executable
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: windows-build

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.VERSION }}
        name: Release ${{ env.VERSION }}
        body: |
          Automated release for commit ${{ github.sha }}.
          # Linux build: [Download Linux Executable](https://github.com/${{ github.repository }}/releases/download/${{ steps.create_release.outputs.tag_name }}/release-package.zip)
          # Windows build: [Download Windows Executable](https://github.com/${{ github.repository }}/releases/download/${{ steps.create_release.outputs.tag_name }}/main-windows.exe)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Linux executable
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.VERSION }}
        files: ./release-package.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}